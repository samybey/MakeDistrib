module Node {

	message int_message;

	chare Node {
  
	    entry Node(std::string nom, std::vector<CProxy_Node> dependancesVector, std::string commande);
	
		entry [sync] int_message* isGoodName(std::string name);
	
		entry [sync] std::vector<CProxy_Node> getDependencesVector();
	
		entry void setDependencesVector(std::vector<CProxy_Node> dependencesVector);
	
		entry [sync] std::string getCommand();
	
		entry void exec(std::vector<std::string> dependencesVector, std::vector<StringNode> stringVec);

		entry void exec(CProxy_Node pereProxy,std::vector<std::string> dependencesVector, std::vector<StringNode> stringVec);

		entry void execCommand();
		
		entry void done();
	};
};