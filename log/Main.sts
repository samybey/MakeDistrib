PROJECTIONS_ID 
VERSION 8.0
TOTAL_PHASES 1
MACHINE netlrts-linux-x86_64
PROCESSORS 16
TOTAL_CHARES 46
TOTAL_EPS 179
TOTAL_MSGS 28
TOTAL_PSEUDOS 0
TOTAL_EVENTS 0
CHARE 0 dummy_thread_chare
CHARE 1 dummy_pack_chare
CHARE 2 dummy_unpack_chare
CHARE 3 SDAG
CHARE 4 null
CHARE 5 Chare
CHARE 6 Group
CHARE 7 FutureBOC
CHARE 8 FutureMain
CHARE 9 CkGroupInitCallback
CHARE 10 CkGroupReadyCallback
CHARE 11 CkReductionMgr
CHARE 12 CkNodeReductionMgr
CHARE 13 CkLocMgr
CHARE 14 CkArrayMap
CHARE 15 RRMap
CHARE 16 DefaultArrayMap
CHARE 17 FastArrayMap
CHARE 18 HilbertArrayMap
CHARE 19 ReadFileMap
CHARE 20 BlockMap
CHARE 21 CldMap
CHARE 22 ConfigurableRRMap
CHARE 23 PropMap
CHARE 24 CkMapsInit
CHARE 25 CkArray
CHARE 26 ArrayElement
CHARE 27 BaseLB
CHARE 28 NullLB
CHARE 29 LBDBInit
CHARE 30 LBDatabase
CHARE 31 MetaLBInit
CHARE 32 MetaBalancer
CHARE 33 MetaBalancerRedn
CHARE 34 ckcallback_main
CHARE 35 ckcallback_group
CHARE 36 waitqd_QDChare
CHARE 37 CkCheckpointMgr
CHARE 38 CkCheckpointInit
CHARE 39 CkMulticastMgr
CHARE 40 Node
CHARE 41 Main
CHARE 42 TraceProjectionsInit
CHARE 43 KMeansBOC
CHARE 44 TraceProjectionsBOC
CHARE 45 debug_Chare
ENTRY CHARE 0 dummy_thread_ep 0 0
ENTRY CHARE 1 dummy_pack_ep 1 1
ENTRY CHARE 2 dummy_unpack_ep 2 2
ENTRY CHARE 3 SDAG_RTS 3 3
ENTRY CHARE 4 null 0 0
ENTRY CHARE 5 FutureBOC(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 6 SetFuture(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 7 SetSema(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 8 FutureBOC(CkMigrateMessage* impl_msg) 7 0
ENTRY CHARE 9 FutureMain(CkArgMsg* impl_msg) 8 0
ENTRY CHARE 10 CkGroupInitCallback() 9 0
ENTRY CHARE 11 callMeBack(CkGroupCallbackMsg* impl_msg) 9 7
ENTRY CHARE 12 CkGroupInitCallback(CkMigrateMessage* impl_msg) 9 0
ENTRY CHARE 13 CkGroupReadyCallback() 10 0
ENTRY CHARE 14 callMeBack(CkGroupCallbackMsg* impl_msg) 10 7
ENTRY CHARE 15 CkGroupReadyCallback(CkMigrateMessage* impl_msg) 10 0
ENTRY CHARE 16 CkReductionMgr() 11 0
ENTRY CHARE 17 RecvMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 18 ReductionStarting(CkReductionNumberMsg* impl_msg) 11 9
ENTRY CHARE 19 LateMigrantMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 20 MigrantDied(CkReductionNumberMsg* impl_msg) 11 9
ENTRY CHARE 21 Barrier_RecvMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 22 contributeViaMessage(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 23 AddToInactiveList(CkReductionInactiveMsg* impl_msg) 11 10
ENTRY CHARE 24 CkReductionMgr(CkMigrateMessage* impl_msg) 11 0
ENTRY CHARE 25 CkNodeReductionMgr() 12 0
ENTRY CHARE 26 RecvMsg(CkReductionMsg* impl_msg) 12 8
ENTRY CHARE 27 DeleteChild(int child) 12 0
ENTRY CHARE 28 DeleteNewChild(int child) 12 0
ENTRY CHARE 29 modifyTree(int code, int size, const int *data) 12 0
ENTRY CHARE 30 collectMaxRedNo(int redNo) 12 0
ENTRY CHARE 31 unblockNode(int maxRedNo) 12 0
ENTRY CHARE 32 CkLocMgr(const CkArrayOptions &opts) 13 11
ENTRY CHARE 33 immigrate(CkArrayElementMigrateMessage* impl_msg) 13 12
ENTRY CHARE 34 requestLocation(const CkArrayIndex &idx, int peToTell, const bool &suppressIfHere, int ifNonExistent, int chareType, const CkArrayID &mgr) 13 11
ENTRY CHARE 35 requestLocation(const CmiUInt8 &id, int peToTell, const bool &suppressIfHere) 13 11
ENTRY CHARE 36 updateLocation(const CkArrayIndex &idx, const CmiUInt8 &id, int nowOnPe) 13 11
ENTRY CHARE 37 updateLocation(const CmiUInt8 &id, int nowOnPe) 13 11
ENTRY CHARE 38 reclaimRemote(const CkArrayIndex &idx, int deletedOnPe) 13 11
ENTRY CHARE 39 dummyAtSync() 13 0
ENTRY CHARE 40 CkLocMgr(CkMigrateMessage* impl_msg) 13 0
ENTRY CHARE 41 RRMap() 15 0
ENTRY CHARE 42 RRMap(CkMigrateMessage* impl_msg) 15 0
ENTRY CHARE 43 DefaultArrayMap() 16 0
ENTRY CHARE 44 DefaultArrayMap(CkMigrateMessage* impl_msg) 16 0
ENTRY CHARE 45 FastArrayMap() 17 0
ENTRY CHARE 46 FastArrayMap(CkMigrateMessage* impl_msg) 17 0
ENTRY CHARE 47 HilbertArrayMap() 18 0
ENTRY CHARE 48 HilbertArrayMap(CkMigrateMessage* impl_msg) 18 0
ENTRY CHARE 49 ReadFileMap() 19 0
ENTRY CHARE 50 ReadFileMap(CkMigrateMessage* impl_msg) 19 0
ENTRY CHARE 51 BlockMap() 20 0
ENTRY CHARE 52 BlockMap(CkMigrateMessage* impl_msg) 20 0
ENTRY CHARE 53 CldMap() 21 0
ENTRY CHARE 54 CldMap(CkMigrateMessage* impl_msg) 21 0
ENTRY CHARE 55 ConfigurableRRMap() 22 0
ENTRY CHARE 56 ConfigurableRRMap(CkMigrateMessage* impl_msg) 22 0
ENTRY CHARE 57 PropMap() 23 0
ENTRY CHARE 58 PropMap(CkMigrateMessage* impl_msg) 23 0
ENTRY CHARE 59 CkMapsInit(CkArgMsg* impl_msg) 24 0
ENTRY CHARE 60 CkArray(const CkArrayOptions &opts, const CkMarshalledMessage &ctorMsg) 25 11
ENTRY CHARE 61 insertElement(const CkMarshalledMessage &impl_noname_0, const CkArrayIndex &impl_noname_1, const int *listenerData) 25 11
ENTRY CHARE 62 demandCreateElement(const CkArrayIndex &idx, int ctor, const CkDeliver_t &type) 25 11
ENTRY CHARE 63 remoteBeginInserting() 25 0
ENTRY CHARE 64 remoteDoneInserting() 25 0
ENTRY CHARE 65 initDone() 25 0
ENTRY CHARE 66 sendBroadcast(CkMessage* impl_msg) 25 -1
ENTRY CHARE 67 recvBroadcast(CkMessage* impl_msg) 25 -1
ENTRY CHARE 68 recvBroadcastViaTree(CkMessage* impl_msg) 25 -1
ENTRY CHARE 69 sendExpeditedBroadcast(CkMessage* impl_msg) 25 -1
ENTRY CHARE 70 recvExpeditedBroadcast(CkMessage* impl_msg) 25 -1
ENTRY CHARE 71 ckDestroy() 25 0
ENTRY CHARE 72 CkArray(CkMigrateMessage* impl_msg) 25 0
ENTRY CHARE 73 ArrayElement() 26 0
ENTRY CHARE 74 ckDestroy() 26 0
ENTRY CHARE 75 recvBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 76 inmem_checkpoint(CkArrayCheckPTReqMessage* impl_msg) 26 0
ENTRY CHARE 77 defrag(CkReductionMsg* impl_msg) 26 8
ENTRY CHARE 78 ArrayElement(CkMigrateMessage* impl_msg) 26 0
ENTRY CHARE 79 BaseLB(const CkLBOptions &impl_noname_0) 27 11
ENTRY CHARE 80 unregister() 27 0
ENTRY CHARE 81 BaseLB(CkMigrateMessage* impl_msg) 27 0
ENTRY CHARE 82 NullLB(const CkLBOptions &impl_noname_0) 28 11
ENTRY CHARE 83 migrationsDone() 28 0
ENTRY CHARE 84 NullLB(CkMigrateMessage* impl_msg) 28 0
ENTRY CHARE 85 LBDBInit(CkArgMsg* impl_msg) 29 0
ENTRY CHARE 86 LBDatabase() 30 0
ENTRY CHARE 87 ResumeClients() 30 0
ENTRY CHARE 88 LBDatabase(CkMigrateMessage* impl_msg) 30 0
ENTRY CHARE 89 MetaLBInit(CkArgMsg* impl_msg) 31 0
ENTRY CHARE 90 MetaBalancer() 32 0
ENTRY CHARE 91 ReceiveMinStats(const double *load, int n) 32 11
ENTRY CHARE 92 redn_wrapper_ReceiveMinStats(CkReductionMsg *impl_msg) 32 11
ENTRY CHARE 93 LoadBalanceDecision(int req_no, int period) 32 11
ENTRY CHARE 94 LoadBalanceDecisionFinal(int req_no, int period) 32 11
ENTRY CHARE 95 ReceiveIterationNo(int impl_noname_0) 32 11
ENTRY CHARE 96 RegisterNoObjCallback(int impl_noname_1) 32 11
ENTRY CHARE 97 TriggerAdaptiveReduction() 32 0
ENTRY CHARE 98 MetaLBCallLBOnChares() 32 0
ENTRY CHARE 99 PreviousAvgLoad(double avg) 32 11
ENTRY CHARE 100 MetaBalancer(CkMigrateMessage* impl_msg) 32 0
ENTRY CHARE 101 MetaBalancerRedn() 33 0
ENTRY CHARE 102 ReceiveIterNo(int max_iter) 33 11
ENTRY CHARE 103 redn_wrapper_ReceiveIterNo(CkReductionMsg *impl_msg) 33 11
ENTRY CHARE 104 getMaxIter(int impl_noname_2) 33 11
ENTRY CHARE 105 MetaBalancerRedn(CkMigrateMessage* impl_msg) 33 0
ENTRY CHARE 106 ckcallback_main(CkArgMsg* impl_msg) 34 0
ENTRY CHARE 107 ckcallback_group() 35 0
ENTRY CHARE 108 registerCcsCallback(const char *name, const CkCallback &cb) 35 11
ENTRY CHARE 109 call(const CkCallback &c, const CkMarshalledMessage &msg) 35 11
ENTRY CHARE 110 call(const CkCallback &c, int length, const char *data) 35 11
ENTRY CHARE 111 ckcallback_group(CkMigrateMessage* impl_msg) 35 0
ENTRY CHARE 112 waitqd_QDChare(CkArgMsg* impl_msg) 36 0
ENTRY CHARE 113 waitQD() 36 0
ENTRY CHARE 114 onQD(CkQdMsg* impl_msg) 36 5
ENTRY CHARE 115 waitqd_QDChare(CkMigrateMessage* impl_msg) 36 0
ENTRY CHARE 116 CkCheckpointMgr() 37 0
ENTRY CHARE 117 Checkpoint(const char *dirname, const CkCallback &cb, const bool &requestStatus) 37 11
ENTRY CHARE 118 SendRestartCB() 37 0
ENTRY CHARE 119 redn_wrapper_SendRestartCB(CkReductionMsg *impl_msg) 37 8
ENTRY CHARE 120 CkCheckpointMgr(CkMigrateMessage* impl_msg) 37 0
ENTRY CHARE 121 CkCheckpointInit(CkArgMsg* impl_msg) 38 0
ENTRY CHARE 122 CkMulticastMgr(int _dfactor, unsigned int _split_size, unsigned int _split_threshold) 39 11
ENTRY CHARE 123 setup(multicastSetupMsg* impl_msg) 39 22
ENTRY CHARE 124 recvCookie(const CkSectionInfo &sid, const CkSectionInfo &child) 39 11
ENTRY CHARE 125 teardown(const CkSectionInfo &sid) 39 11
ENTRY CHARE 126 freeup(const CkSectionInfo &sid) 39 11
ENTRY CHARE 127 retrieveCookie(const CkSectionInfo &s, const CkSectionInfo &srcInfo) 39 11
ENTRY CHARE 128 recvCookieInfo(const CkSectionInfo &s, int red) 39 11
ENTRY CHARE 129 retire(const CkSectionInfo &sid, const CkSectionInfo &root) 39 11
ENTRY CHARE 130 recvMsg(multicastGrpMsg* impl_msg) 39 23
ENTRY CHARE 131 sendToLocal(multicastGrpMsg* impl_msg) 39 23
ENTRY CHARE 132 recvPacket(const CkSectionInfo &_cookie, int offset, int n, const char *data, int seqno, int count, int totalsize, int frombufer) 39 11
ENTRY CHARE 133 recvRedMsg(CkReductionMsg* impl_msg) 39 8
ENTRY CHARE 134 updateRedNo(const mCastEntryPtr &e, int no) 39 11
ENTRY CHARE 135 CkMulticastMgr(CkMigrateMessage* impl_msg) 39 0
ENTRY CHARE 136 Node(const std::string &nom, const std::vector<CProxy_Node > &dependancesVector, const std::string &commande) 40 11
ENTRY CHARE 137 addDependence(const CProxy_Node &dep) 40 11
ENTRY CHARE 138 exec(const CProxy_Node &pereProxy) 40 11
ENTRY CHARE 139 exec() 40 0
ENTRY CHARE 140 execCommand() 40 0
ENTRY CHARE 141 done() 40 0
ENTRY CHARE 142 Main(CkArgMsg* impl_msg) 41 0
ENTRY CHARE 143 done() 41 0
ENTRY CHARE 144 TraceProjectionsInit(CkArgMsg* impl_msg) 42 0
ENTRY CHARE 145 KMeansBOC(const bool &impl_noname_0, int impl_noname_1, int impl_noname_2, double impl_noname_3, const bool &impl_noname_4) 43 11
ENTRY CHARE 146 startKMeansAnalysis() 43 0
ENTRY CHARE 147 flushCheck(const bool &impl_noname_5) 43 11
ENTRY CHARE 148 redn_wrapper_flushCheck(CkReductionMsg *impl_msg) 43 11
ENTRY CHARE 149 flushCheckDone() 43 0
ENTRY CHARE 150 getNextPhaseMetrics() 43 0
ENTRY CHARE 151 globalMetricRefinement(CkReductionMsg* impl_msg) 43 8
ENTRY CHARE 152 redn_wrapper_globalMetricRefinement(CkReductionMsg *impl_msg) 43 8
ENTRY CHARE 153 findInitialClusters(KMeansStatsMessage* impl_msg) 43 24
ENTRY CHARE 154 updateKSeeds(const double *result, int n) 43 11
ENTRY CHARE 155 redn_wrapper_updateKSeeds(CkReductionMsg *impl_msg) 43 11
ENTRY CHARE 156 updateSeedMembership(KSeedsMessage* impl_msg) 43 25
ENTRY CHARE 157 collectDistances(KSelectionMessage* impl_msg) 43 26
ENTRY CHARE 158 findNextMinMax(CkReductionMsg* impl_msg) 43 8
ENTRY CHARE 159 redn_wrapper_findNextMinMax(CkReductionMsg *impl_msg) 43 8
ENTRY CHARE 160 phaseDone() 43 0
ENTRY CHARE 161 KMeansBOC(CkMigrateMessage* impl_msg) 43 0
ENTRY CHARE 162 TraceProjectionsBOC(const bool &impl_noname_6, const bool &impl_noname_7) 44 11
ENTRY CHARE 163 traceProjectionsParallelShutdown(int impl_noname_8) 44 11
ENTRY CHARE 164 startTimeAnalysis() 44 0
ENTRY CHARE 165 startTimeDone(double impl_noname_9) 44 11
ENTRY CHARE 166 redn_wrapper_startTimeDone(CkReductionMsg *impl_msg) 44 11
ENTRY CHARE 167 startEndTimeAnalysis() 44 0
ENTRY CHARE 168 endTimeDone(double impl_noname_a) 44 11
ENTRY CHARE 169 redn_wrapper_endTimeDone(CkReductionMsg *impl_msg) 44 11
ENTRY CHARE 170 kMeansDone() 44 0
ENTRY CHARE 171 redn_wrapper_kMeansDone(CkReductionMsg *impl_msg) 44 8
ENTRY CHARE 172 kMeansDoneFlushed() 44 0
ENTRY CHARE 173 finalize() 44 0
ENTRY CHARE 174 closingTraces() 44 0
ENTRY CHARE 175 closeParallelShutdown() 44 0
ENTRY CHARE 176 redn_wrapper_closeParallelShutdown(CkReductionMsg *impl_msg) 44 8
ENTRY CHARE 177 flush_warning(int pe) 44 11
ENTRY CHARE 178 TraceProjectionsBOC(CkMigrateMessage* impl_msg) 44 0
MESSAGE 0 0
MESSAGE 1 0
MESSAGE 2 0
MESSAGE 3 0
MESSAGE 4 4
MESSAGE 5 1
MESSAGE 6 4
MESSAGE 7 16
MESSAGE 8 168
MESSAGE 9 4
MESSAGE 10 8
MESSAGE 11 8
MESSAGE 12 48
MESSAGE 13 360
MESSAGE 14 4
MESSAGE 15 40
MESSAGE 16 32
MESSAGE 17 16
MESSAGE 18 24
MESSAGE 19 24
MESSAGE 20 4
MESSAGE 21 24
MESSAGE 22 80
MESSAGE 23 32
MESSAGE 24 40
MESSAGE 25 16
MESSAGE 26 24
MESSAGE 27 0
TOTAL_STATS 0
TOTAL_FUNCTIONS 0 
END
